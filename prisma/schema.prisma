// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// Enums
enum UserRole {
  ADMIN
  USER
  SUPERADMIN
}

enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}

enum LoanStatus {
  PENDING
  ACTIVE
  PAID
  REJECTED
}

enum ContributionType {
  MONTHLY_CONTRIBUTION
  LOAN_REPAYMENT
  VOLUNTARY
  FINE
  OTHER
}

enum ContributionStatus {
  PENDING
  RECEIVED
  CANCELLED
}


enum TransactionType {
  IN
  OUT
}



// Models
model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  auth0Id    String    @unique
  firstName  String?
  lastName   String?
  phone      String?

  role       UserRole   @default(USER)
  status     UserStatus @default(ACTIVE)

  loans Loan[]
  contributions Contribution[]
}

model Loan {
  id        Int    @id @default(autoincrement())
  amount    Int
  interestRate Float
  status    LoanStatus @default(PENDING)
  createdAt DateTime @default(now())
  issueDate DateTime
  updatedAt DateTime @updatedAt
  description String?
  userId    Int
  user      User   @relation(fields: [userId], references: [id])

  contributions Contribution[]
  transactions Transaction[]
}


model Contribution {
  id        Int    @id @default(autoincrement())
  amount    Int
  status    ContributionStatus @default(PENDING)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  contributionType      ContributionType @default(MONTHLY_CONTRIBUTION)
  description String?

  loanId Int?
  loan      Loan?   @relation(fields: [loanId], references: [id])

  userId    Int
  user      User   @relation(fields: [userId], references: [id])

  transactions Transaction[]
}

model Transaction {
  id        Int    @id @default(autoincrement())
  amount    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  transactionType TransactionType @default(IN)

  contributionId Int
  contribution      Contribution   @relation(fields: [contributionId], references: [id])

  loanId Int
  loan      Loan   @relation(fields: [loanId], references: [id])

}