datasource db {
  provider = "postgresql" // or "sqlite", "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Enums
enum UserRole {
  ADMIN
  USER
  SUPERADMIN
}

enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}

enum LoanStatus {
  PENDING
  ACTIVE
  PAID
  REJECTED
}

enum ContributionStatus {
  PENDING
  RECEIVED
  CANCELLED
}

enum ContributionType {
  CONTRIBUTION
  LOAN_REPAYMENT
  FINE
  OTHER
}

enum TransactionType {
  IN
  OUT
}

// Models
model User {
  id         Int       @id @default(autoincrement())
  username   String    @unique
  email      String    @unique
  password   String

  firstName  String?
  lastName   String?
  phone      String?

  role       UserRole   @default(USER)
  status     UserStatus @default(ACTIVE)

  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  profile    UserProfile?

  // Example of how you'd link to transactions or another table
  // transactions Transactions[]
}

// Extended user details
model UserProfile {
  id        Int    @id @default(autoincrement())
  bio       String?
  avatarUrl String?

  userId    Int    @unique
  user      User   @relation(fields: [userId], references: [id])
}

model Loan {
  id        Int    @id @default(autoincrement())
  amount    Int
  interestRate Float
  status    LoanStatus @default(PENDING)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId    Int
}

model Contribution {
  id        Int    @id @default(autoincrement())
  amount    Int
  status    ContributionStatus @default(PENDING)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  contributionType      ContributionType @default(CONTRIBUTION)

  userId    Int
}

model Transaction {
  id        Int    @id @default(autoincrement())
  amount    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  contributionId Int
  loanId Int
  transactionType TransactionType @default(IN)
}